@*@model eUseControl.Domain.Entities.Products.Product*@
@model WebAplication.Models.ProductForm

@{
    ViewBag.Title = "AddProduct";
    Layout = "~/Views/Shared/Layouts/_Admin.cshtml";
}
<script src="~/Scripts/jquery-3.6.4.min.js"></script>

<div class="d-flex justify-content-center" style="font-size:2.3em; font-weight:500;">Add new Product</div>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-group">
        @Html.LabelFor(model => model.ProductName)
        @Html.TextBoxFor(model => model.ProductName, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.ProductName)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BrandName)
        @Html.TextBoxFor(model => model.BrandName, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.BrandName)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description)
        @Html.TextBoxFor(model => model.Description, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Description)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RegularPrice)
        @Html.TextBoxFor(model => model.RegularPrice, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.RegularPrice)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PromotionalPrice)
        @Html.TextBoxFor(model => model.PromotionalPrice, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.PromotionalPrice)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Category)
        @Html.TextBoxFor(model => model.Category, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Category)
    </div>

    <div class="form-group text-register" style="width: 350px;">
        @Html.LabelFor(model => model.Gender)
        @Html.DropDownListFor(model => model.Gender, new SelectList(Enum.GetValues(typeof(eUseControl.Domain.Enums.UGender))), "- Select -", new { @class = "form-control" })
    </div>

    <!-- Add other input fields for BrandName, Description, RegularPrice, PromotionalPrice, Category, Gender, etc. -->

    <div class="form-group">
        @Html.LabelFor(model => model.Thumbnail)
        @Html.TextBoxFor(model => model.Thumbnail, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Thumbnail)
    </div>

    <div class="form-group">
        <label>Images</label>
        <div class="input-group mb-3">
            <input type="text" class="form-control mr-3" id="imageUrlInput">
            <div class="input-group-append">
                <button type="button" class="btn btn-primary" id="addImageButton">Add</button>
            </div>
        </div>
        <div id="imageList">
            <!-- Display the list of added images -->
        </div>
    </div>

    <div class="form-group">
        <label>Sizes</label>
        <input type="text" class="form-control" id="sizesInput" name="sizesInput">
        <div id="sizesContainer" class="d-flex">
            <!-- Display dynamically added size input fields here -->
        </div>
    </div>
    //@Html.HiddenFor(model => model.Images)
    //@Html.HiddenFor(model => model.Sizes)

    <!-- Add other input fields for Sizes -->
    <div class="d-flex justify-content-center">
        <button type="submit" class="btn btn-primary" style="width:150px;">Save</button>
    </div>
}
<script>
    $(document).ready(function () {
        // Image URL input field
        var imageUrlInput = $('#imageUrlInput');
        // Image list container
        var imageList = $('#imageList');

        // Add button click event handler
        $('#addImageButton').on('click', function () {
            var imageUrl = imageUrlInput.val().trim();
            if (imageUrl !== '') {
                // Append the image URL as a list item
                imageList.append('<li><input type="hidden" name="Images[' + imageList.children().length + '].Image" value="' + imageUrl + '"><a href="' + imageUrl + '">' + imageUrl + '</a> <button type="button" class="btn btn-danger btn-sm deleteImageButton">Delete</button></li>');
                // Clear the image URL input field
                imageUrlInput.val('');
            }
        });

        // Delete button click event handler
        $(document).on('click', '.deleteImageButton', function () {
            $(this).closest('li').remove();
        });

        var sizesInput = $('#sizesInput');
        var sizesContainer = $('#sizesContainer');

        // Convert the sizes string into a list of input fields
        sizesInput.on('blur', function () {
            var sizesString = sizesInput.val().trim();
            if (sizesString !== '') {
                var sizesArray = sizesString.split(',');
                sizesInput.val(sizesArray.join(','));

                sizesContainer.empty();

                sizesArray.forEach(function (sizeId, index) {
                    sizesContainer.append('<input type="hidden" name="Sizes[' + index + '].SizeId" value="' + sizeId.trim() + '">');
                });
            }
        });

        // Update the hidden field value when the form is submitted
        $('form').on('submit', function () {
            updateHiddenField();
            // Update the Images hidden field value
            imageList.find('input[type="hidden"]').each(function (index) {
                $(this).attr('name', 'Images[' + index + '].Image');
            });
            // Update the Sizes hidden field value
            sizesContainer.find('input[type="hidden"]').each(function (index) {
                $(this).attr('name', 'Sizes[' + index + '].SizeId');
            });
        });
    });
</script>












@*<div class="col-md-10">
        <div class="card card-user">
            <div class="card-header">
                @if (Model != null)
                {
                    <h4 class="card-title" style="color: #5466de">
                        Edit @Model.ProductName
                    </h4>
                }
                else
                {
                    <h4 class="card-title" style="color: #5466de">
                        Add New Product
                    </h4>
                }
            </div>

            <div class="card-body">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationMessage("")

                    <div class="row">
                        <div class="col-md-6 pr-1">
                            <div class="form-group">
                                @Html.LabelFor(x => x.ProductName)
                                @Html.TextBoxFor(x => x.ProductName, new
                                {
                                    @class = "form-control",
                                    placeholder = "Type here"
                                })
                                @Html.ValidationMessageFor(x => x.ProductName)
                            </div>
                        </div>
                        <div class="col-md-6 pl-1">
                            <div class="form-group">
                                @Html.LabelFor(x => x.BrandName)
                                @Html.TextBoxFor(x => x.BrandName, new
                                {
                                    @class = "form-control",
                                    placeholder = "Type here"
                                })
                                @Html.ValidationMessageFor(x => x.BrandName)
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.LabelFor(x => x.Description)
                                @Html.TextAreaFor(x => x.Description, new
                                {
                                    @class = "form-control",
                                    placeholder = "Type here"
                                })
                                @Html.ValidationMessageFor(x => x.Description)
                            </div>
                        </div>

                        <div class="col-md-12">
                            @if (Model != null)
                            {
                                <label>Images</label>
                                <br />

                                for (var i = 0; i < 3; i++)
                                {
                                    <img src="@Model.GetImageById(i)" width="100" height="100" style="margin-right: 10px" />
                                    @Html.TextBox("Image" + i, "", new
                                    {
                                        type = "file",
                                        form = "form_file" + i,
                                        onchange = "this.form.submit()"
                                    })
                                    <br />
                                    <br />
                                }

                                <br />
                            }
                            else
                            {
                                <span>You can add images after you've created a product.</span>
                            }
                        </div>

                        <div class="col-md-4 pr-2">
                            <div class="form-group">
                                @Html.LabelFor(x => x.RegularPrice)
                                @Html.TextBoxFor(x => x.RegularPrice, new
                                {
                                    @class = "form-control",
                                    placeholder = "0.00",
                                    type = "number",
                                    step = "0.01",
                                    min = "0"
                                })
                                @Html.ValidationMessageFor(x => x.RegularPrice)
                            </div>
                        </div>
                        <div class="col-md-4 px-2">
                            <div class="form-group">
                                @Html.LabelFor(x => x.PromotionalPrice)
                                @Html.TextBoxFor(x => x.PromotionalPrice, new
                               {
                                   @class = "form-control",
                                   placeholder = "0.00",
                                   type = "number",
                                   step = "0.01",
                                   min = "0"
                               })
                                @Html.ValidationMessageFor(x => x.PromotionalPrice)
                            </div>
                        </div>
                        <div class="col-md-4 pl-2">
                            <div class="form-group">
                                @Html.LabelFor(x => x.Currency)
                                @Html.DropDownListFor(x => x.Currency,
                                    new SelectList(Enum.GetValues(typeof(eUseControl.Domain.Enums.CurrencyType))),
                                    new { @class = "form-control" }
                                )
                                @Html.ValidationMessageFor(x => x.Currency)
                            </div>

                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4 pr-2">
                            <div class="form-group">
                                @Html.LabelFor(x => x.Category)
                                @Html.TextBoxFor(x => x.Category, new
                                {
                                    @class = "form-control",
                                    placeholder = "Type here",
                                })
                                @Html.ValidationMessageFor(x => x.Category)
                            </div>
                        </div>
                        <div class="col-md-4 px-2">
                            <div class="form-group">
                                @Html.LabelFor(x => x.Tags)
                                @Html.TextBoxFor(x => x.Tags, new
                                {
                                    @class = "form-control",
                                    placeholder = "Enter tags",
                                })
                                @Html.ValidationMessageFor(x => x.Tags)
                            </div>
                        </div>
                        <div class="col-md-4 pl-2">
                            <div class="form-group">
                                @Html.LabelFor(x => x.Size)
                                @Html.DropDownListFor(x => x.Size,
                                    new SelectList(Enum.GetValues(typeof(eUseControl.Domain.Enums.ProductSize))),
                                    new { @class = "form-control" }
                                )
                                @Html.ValidationMessageFor(x => x.Size)
                            </div>

                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12 text-center">
                            <button type="submit" class="btn btn-primary btn-round mr-4">Save and publish</button>
                            <button type="submit" class="btn btn-secondary btn-round">Save to draft</button>
                        </div>
                    </div>
                }

                @if (Model != null)
                {
                    for (var i = 0; i < 3; i++)
                    {
                        using (Html.BeginForm(
                            "EditProductUploadImage",
                            "Admin",
                            FormMethod.Post,
                            new
                            {
                                enctype = "multipart/form-data",
                                id = "form_file" + i
                            }
                        ))
                        {
                            @Html.AntiForgeryToken()
                            @Html.Hidden("ProductId", Model.Id)
                        }
                    }

                }
            </div>
        </div>
    </div>*@
